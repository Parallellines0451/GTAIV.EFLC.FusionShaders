// Depth of field downsampled blur pass
// Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
//
// Parameters:
//
//   sampler2D DOFBlurSampler;
//   float4 globalScreenSize;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   globalScreenSize             c44      1
//   DOFBlurSampler               s8       1
//

    ps_3_0
    def c13, 0, 0, 0, 0
    def c14, 0.5, 0.0027777, 0.0625, 1
    // Small kernel from https://github.com/Unity-Technologies/PostProcessing/blob/v2/PostProcessing/Shaders/Builtins/DiskKernels.hlsl
    def c15, 0.16855472, 0.5187581, -0.44128203, 0.3206101
    def c16, -0.44128197, -0.3206102, 0.1685548, -0.5187581
    def c17, 1, 0, 0.809017, 0.58778524
    def c18, 0.30901697, 0.95105654, -0.30901703, 0.9510565
    def c19, -0.80901706, 0.5877852, -1, 0
    def c20, -0.80901694, -0.58778536, -0.30901664, -0.9510566
    def c21, 0.30901712, -0.9510565, 0.80901694, -0.5877853
    def c22, 0.54545456, 0, 0, 0
    
    dcl_texcoord v0.xy
    dcl_2d s8
    
    // add correct half pixel offset for half res
    // UV = UV - (0.5 / res) + 0.5 / (res * 0.5);
    mov r0.zw, c44
    mad r0.zw, r0, c14.x, v0.xyxy
    
    mul r0.xy, c44.y, c44.zw
    mul r0.xy, r0, c14.y
    mul r0.xy, r0, c221.z
    
    texld r27.xyz, r0.zw, s8
    
    mad r2, r0.xyxy, c15, r0.zwzw
    texld r3.xyz, r2.xy, s8
    add r1.xyz, r27, r3
    texld r4.xyz, r2.zw, s8
    add r1.xyz, r1, r4
    
    mad r2, r0.xyxy, c16, r0.zwzw
    texld r5.xyz, r2.xy, s8
    add r1.xyz, r1, r5
    texld r6.xyz, r2.zw, s8
    add r1.xyz, r1, r6
    
    mad r2, r0.xyxy, c17, r0.zwzw
    texld r7.xyz, r2.xy, s8
    add r1.xyz, r1, r7
    texld r8.xyz, r2.zw, s8
    add r1.xyz, r1, r8
    
    mad r2, r0.xyxy, c18, r0.zwzw
    texld r9.xyz, r2.xy, s8
    add r1.xyz, r1, r9
    texld r10.xyz, r2.zw, s8
    add r1.xyz, r1, r10
    
    mad r2, r0.xyxy, c19, r0.zwzw
    texld r11.xyz, r2.xy, s8
    add r1.xyz, r1, r11
    texld r12.xyz, r2.zw, s8
    add r1.xyz, r1, r12
    
    mad r2, r0.xyxy, c20, r0.zwzw
    texld r13.xyz, r2.xy, s8
    add r1.xyz, r1, r13
    texld r14.xyz, r2.zw, s8
    add r1.xyz, r1, r14
    
    mad r2, r0.xyxy, c21, r0.zwzw
    texld r15.xyz, r2.xy, s8
    add r1.xyz, r1, r15
    texld r16.xyz, r2.zw, s8
    add r1.xyz, r1, r16
    
    mad r2, r0.xyxy, c22, r0.zwzw
    texld r17.xyz, r2.xy, s8
    add r1.xyz, r1, r17
    
    mul r1.xyz, r1, c14.z // blurred
    
    // subtract blurred result from each sample
    
    add r3.xyz, r3, -r1
    max r3.xyz, r3, c13.x
    
    add r4.xyz, r4, -r1
    max r4.xyz, r4, c13.x
    add r3.xyz, r3, r4
    
    add r4.xyz, r5, -r1
    max r4.xyz, r4, c13.x
    add r3.xyz, r3, r4
    
    add r4.xyz, r6, -r1
    max r4.xyz, r4, c13.x
    add r3.xyz, r3, r4
    
    add r4.xyz, r7, -r1
    max r4.xyz, r4, c13.x
    add r3.xyz, r3, r4
    
    add r4.xyz, r8, -r1
    max r4.xyz, r4, c13.x
    add r3.xyz, r3, r4
    
    add r4.xyz, r9, -r1
    max r4.xyz, r4, c13.x
    add r3.xyz, r3, r4
    
    add r4.xyz, r10, -r1
    max r4.xyz, r4, c13.x
    add r3.xyz, r3, r4
    
    add r4.xyz, r11, -r1
    max r4.xyz, r4, c13.x
    add r3.xyz, r3, r4
    
    add r4.xyz, r12, -r1
    max r4.xyz, r4, c13.x
    add r3.xyz, r3, r4
    
    add r4.xyz, r13, -r1
    max r4.xyz, r4, c13.x
    add r3.xyz, r3, r4
    
    add r4.xyz, r14, -r1
    max r4.xyz, r4, c13.x
    add r3.xyz, r3, r4
    
    add r4.xyz, r15, -r1
    max r4.xyz, r4, c13.x
    add r3.xyz, r3, r4
    
    add r4.xyz, r16, -r1
    max r4.xyz, r4, c13.x
    add r3.xyz, r3, r4
    
    add r4.xyz, r17, -r1
    max r4.xyz, r4, c13.x
    add r3.xyz, r3, r4
    
    add r4.xyz, r27, -r1
    max r4.xyz, r4, c13.x
    add r3.xyz, r3, r4
    
    mad oC0.xyz, r3, c14.z, r1
    
    mov oC0.w, c14.w

// approximately 176 instruction slots used (14 texture, 162 arithmetic)
