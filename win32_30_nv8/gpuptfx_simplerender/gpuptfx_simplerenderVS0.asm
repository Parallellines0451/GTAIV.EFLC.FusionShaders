//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 gColorTint;
//   float gMotionBlur;
//   float4 gRadius;
//   float4 gTextureAnimation;
//   bool gUseDirectional;
//   row_major float4x4 gViewInverse;
//   row_major float4x4 gWorldViewProj;
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   gUseDirectional   b0       1
//   gWorldViewProj    c8       4
//   gViewInverse      c12      4
//   gMotionBlur       c64      1
//   gRadius           c65      1
//   gTextureAnimation c66      1
//   gColorTint        c67      1
//

    vs_3_0
    def c230, 1.8395173895e+25, 3.9938258725e+24, 4.5435787456e+30, 2.8362280918e-42 // 2024
    def c0, -0.5, 0.699999988, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_position o0
    dcl_texcoord9 o10
    dcl_color o1
    dcl_texcoord o2.xy
    dcl_texcoord1 o3.xyz
    add r0.x, c0.x, v2.x
    if b0
      nrm r1.xyz, v1
      add r0.yzw, c15.xyzx, -v0.xyzx
      dp3 r1.w, r0.yzww, r0.yzww
      rsq r1.w, r1.w
      mul r0.yzw, r0, r1.w
      mul r2.xyz, r0.yzww, r1.zxyw
      mad r0.yzw, r1.xyzx, r0.xzwy, -r2.xxyz
      nrm r2.xyz, r0.yzww
      mul r0.yzw, c64.x, v1.xxyz
      mad r0.yzw, c65.x, r1.xxyz, r0
      mul r1.xyz, r2, c65.x
      add r1.w, c0.y, -v2.y
      mul r0.yzw, -r0, r1.w
      mad r0.yzw, r0.x, r1.xxyz, r0
    else
      add r1.x, c0.x, v2.y
      nrm r2.xyz, c12
      mul r1.yzw, r2.xxyz, c65.x
      nrm r2.xyz, -c13
      mul r2.xyz, r2, c65.x
      mul r2.xyz, r1.x, r2
      mad r0.yzw, r0.x, r1, r2.xxyz
    endif
    add r0.xyz, r0.yzww, v0
    mul r1, r0.y, c9
    mad r1, r0.x, c8, r1
    mad r1, r0.z, c10, r1
    add o0, r1, c11
    add o10.zw, r1, c11
    mad r0.w, v0.w, c66.x, -c66.y
    frc r1.x, r0.w
    add r1.y, r0.w, -r1.x
    slt r0.w, r0.w, -r0.w
    slt r1.x, -r1.x, r1.x
    mad r0.w, r0.w, r1.x, r1.y
    mul_sat r0.w, r0.w, c66.z
    mad o2.x, c66.z, v2.x, r0.w
    mov o1, c67
    mov o2.y, v2.y
    mov o3.xyz, r0
    mov r20.x, c8.w
    add r20.x, r20.x, c9.w
    add r20.x, r20.x, c10.w
    add o10.y, r20.x, c11.w
    
// approximately 51 instruction slots used
