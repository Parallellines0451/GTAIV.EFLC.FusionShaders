// Summary: Ported PS3 shader
// Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
//
// Parameters:
//
//   sampler2D HeightMapSampler;
//   row_major float4x4 HeightMapTransformMtx;
//   row_major float4x4 gViewInverse;
//   row_major float4x4 gWorld;
//   row_major float4x4 gWorldViewProj;
//   float4 waterRenderSimParam;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   gWorld                c0       4
//   gWorldViewProj        c8       4
//   gViewInverse          c12      4
//   HeightMapTransformMtx c64      4
//   waterRenderSimParam   c68      1
//   HeightMapSampler      s0       1
//

    vs_3_0
    def c230, 1.8395173895e+25, 3.9938258725e+24, 4.5435787456e+30, 3.9684772510e-42 // 2832
    def c4, 1.00000001e-010, 0.00499999989, 0.899999976, 2000
    def c5, 1, 0, 4, 64
    def c6, 16, 2, 0, -2
    def c7, 0.75, 0.25, 0.5, -0.5
    def c13, 1, -1, 0, -1000
    def c16, 10, 100, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_color v2
    dcl_2d s0
    dcl_position o0
    dcl_texcoord9 o10
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    mul r0.xyz, c0, v0.x
    mad r0.xyz, v0.y, c1, r0
    mad r0.xyz, v0.z, c2, r0
    add r0.xyz, r0, c3
    add r0.w, r0.z, -c68.z
    add r0.w, r0.w, c6.w
    mul_sat o1.w, r0.w, c7.z
    mov r1.xy, c5
    mul r1.xyz, r1.xxyw, c14.xyxw
    dp3 r0.w, r1, r1
    max r0.w, r0.w, c4.x
    rsq r0.w, r0.w
    mov r1.xy, c14
    mul r1.xy, r0.w, r1
    add r0.w, c14.z, c14.z
    max r0.w, r0_abs.w, c4.w
    mul r1.xy, r0.w, r1
    mov r2.xy, c15
    mov r2.z, c68.z
    add r2.xyz, r2, -c3
    mov r1.z, c5.y
    add r1.xyz, r1, r2
    mul r1.xw, r1.x, c8.yyzw
    mad r1.xy, r1.y, c9.ywzw, r1.xwzw
    mad r1.xy, r1.z, c10.ywzw, r1
    add r1.xy, r1, c11.ywzw
    add r0.w, r1.x, c7.w
    rcp r1.x, r1.y
    mul r1.y, r0.w, r1.x
    mad r0.w, r0.w, r1.x, -c5.x
    abs r1.x, c14.z
    slt r1.x, c4.z, r1.x
    mad r0.w, r1.x, r0.w, -r1.y
    add r1.x, -r0.w, -c5.x
    abs r1.y, c12.z
    slt r1.y, c4.y, r1.y
    mad o4.w, r1.y, r1.x, r0.w
    max r0.w, c4.x, v2.x
    pow r1.x, r0.w, c5.z
    mul r0.w, r1.x, c6.x
    min r0.w, r0.w, c5.x
    max r1.x, c4.x, v1.z
    pow r2.x, r1.x, c5.w
    add r1.x, -r2.x, c5.x
    mul r0.w, r0.w, r1.x
    max r0.w, r0.w, c5.y
    mad r0.w, r0.w, c7.x, c7.y
    mul r1.xyz, r0.x, c64
    mad r1.xyz, r0.y, c65, r1
    mad r1.xyz, r0.z, c66, r1
    add r1.xyz, r1, c67
    mad r1.xyz, r1, c13.xyxw, c13.zxzw
    mov r1.w, c5.y
    texldl r2, r1.xyxw, s0
    add r1.w, -r2.x, c5.x
    add r2.x, -r1.w, r1.z
    mul_sat r2.x, r2.x, c13.w
    add r2.x, -r2.x, c5.x
    mul r2.x, r2.x, c16.y
    min r2.x, r2.x, c5.x
    mul r0.w, r0.w, r2.x
    mul o2.w, r0.w, v2.z
    add r2, r0.xyzx, c6.wwzy
    mul r3, r2.xxww, c64.xyxy
    mad r3, r2.y, c65.xyxy, r3
    mad r2, r2.z, c66.xyxy, r3
    add r2, r2, c67.xyxy
    mad r2, r2, c13.xyxy, c13.zxzx
    mul r3, r2.zwzz, c5.xxxy
    texldl r3, r3, s0
    add r0.w, -r3.x, c5.x
    mul r3, r2.xyxz, c5.xxxy
    add r2, -r1.xyxy, r2
    texldl r3, r3, s0
    add r3.x, -r3.x, c5.x
    min r3.y, r0.w, r3.x
    add r0.w, r0.w, -r1.w
    mul r4.y, r0.w, c16.x
    add r0.w, -r1.w, r3.x
    mul r5.x, r0.w, c16.x
    add r6, r0.xyzx, c6.yyzw
    mov o3.xyz, r0
    mul r0, r6.wwxx, c64.xyxy
    mad r0, r6.y, c65.xyxy, r0
    mad r0, r6.z, c66.xyxy, r0
    add r0, r0, c67.xyxy
    mad r0, r0, c13.xyxy, c13.zxzx
    mul r6, r0.xyxx, c5.xxxy
    texldl r6, r6, s0
    add r3.x, -r6.x, c5.x
    mul r6, r0.zwzx, c5.xxxy
    add r0, r0, -r1.xyxy
    texldl r6, r6, s0
    add r1.x, -r6.x, c5.x
    min r1.y, r3.x, r1.x
    add r3.x, -r1.w, r3.x
    mul r6.y, r3.x, c16.x
    add r1.x, r1.x, -r1.w
    mul r7.y, r1.x, c16.x
    min r1.x, r1.y, r3.y
    min r1.x, r1.x, r1.w
    min o5.w, r1.x, r1.z
    mov o3.w, r1.z
    mov r5.yz, r2.xxyw
    mov r4.xz, r2.wyzw
    mul r1.xyz, r4, r5
    mad r1.xyz, r5.zxyw, r4.yzxw, -r1
    dp3 r1.w, r1, r1
    max r1.w, r1.w, c4.x
    rsq r1.w, r1.w
    mul r1.xyz, r1, r1.w
    mov r7.xz, r0.wyzw
    mov r6.xz, r0.yyxw
    mul r0.xyz, r4.yzxw, r7
    mad r0.xyz, r7.yzxw, r4, -r0
    dp3 r0.w, r0, r0
    max r0.w, r0.w, c4.x
    rsq r0.w, r0.w
    mad r0.xyz, r0.w, r0, r1
    mul r1.xyz, r6, r7.yzxw
    mad r1.xyz, r6.yzxw, r7, -r1
    dp3 r0.w, r1, r1
    max r0.w, r0.w, c4.x
    rsq r0.w, r0.w
    mad r0.xyz, r0.w, r1, r0
    mul r1.xyz, r5.zxyw, r6.yzxw
    mad r1.xyz, r6, r5, -r1
    dp3 r0.w, r1, r1
    max r0.w, r0.w, c4.x
    rsq r0.w, r0.w
    mad r0.xyz, r0.w, r1, r0
    dp3 r0.w, r0, r0
    max r0.w, r0.w, c4.x
    rsq r0.w, r0.w
    mul o5.xyz, r0, r0.w
    mul r0, c8, v0.x
    mad r0, v0.y, c9, r0
    mad r0, v0.z, c10, r0
    add r0, r0, c11
    mov o0, r0
    mov o10.zw, r0
    mov o1.xyz, r0.xyww
    mov o2.xyz, v1
    mov o4.xyz, c15
    mov r20.x, c8.w
    add r20.x, r20.x, c9.w
    add r20.x, r20.x, c10.w
    add o10.y, r20.x, c11.w
    
// approximately 150 instruction slots used (10 texture, 140 arithmetic)
