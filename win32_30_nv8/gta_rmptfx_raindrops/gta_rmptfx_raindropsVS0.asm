//
// Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
//
// Parameters:
//
//   float gAmbientAmount;
//   float4 gAspectRatio;
//   float4 gDepthFxParams;
//   float4 gLightAmbient0;
//   float4 gLightAmbient1;
//   float gSuperAlpha;
//   float4 globalFogColor;
//   float4 globalFogColorN;
//   float4 globalFogParams;
//   float4 globalScreenSize;
//
//
// Registers:
//
//   Name             Reg   Size
//   ---------------- ----- ----
//   gDepthFxParams   c16      1
//   gLightAmbient0   c37      1
//   gLightAmbient1   c38      1
//   globalFogParams  c41      1
//   globalFogColor   c42      1
//   globalFogColorN  c43      1
//   globalScreenSize c44      1
//   gAspectRatio     c47      1
//   gAmbientAmount   c64      1
//   gSuperAlpha      c65      1
//

    vs_3_0
    def c230, 1.8395173895e+25, 3.9938258725e+24, 4.5435787456e+30, 3.5803175763e-42 // 2555
    def c0, -1, 0.159154937, 0.5, 0
    def c1, 6.28318548, -3.14159274, 9.99999975e-006, 0
    def c2, -0.5, 0.5, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_color v2
    dcl_texcoord v3
    dcl_texcoord1 v4
    dcl_texcoord2 v5
    dcl_texcoord3 v6
    dcl_position o0
    dcl_color o1
    dcl_texcoord o2
    dcl_texcoord1 o3
    dcl_texcoord2 o4
    dcl_texcoord3 o5
    dcl_texcoord4 o6
    mad r0.x, v1.z, c0.y, c0.z
    frc r0.x, r0.x
    mad r0.x, r0.x, c1.x, c1.y
    sincos r1.xy, r0.x
    mul r0.xyz, r1.yyxw, v1.yxyw
    mad r1.x, v1.x, r1.x, -r0.x
    add r1.y, r0.z, r0.y
    rcp r0.x, c44.y
    mul r0.y, r0.x, c44.x
    mov r1.z, c0.w
    mov r0.xz, -c0.x
    mad r2.xyz, r1, r0, -v0
    mul r0.xyz, r1, r0
    add r0.w, c0.x, v1.w
    sge r0.w, -r0_abs.w, r0_abs.w
    mad r1.xyz, r0.w, r2, v0
    rcp r2.x, c47.x
    rcp r2.y, c47.y
    mov r2.z, -c0.x
    mad r1.xyz, r1, r2, c1.z
    dp3 r1.x, r1, r1
    rsq r1.x, r1.x
    mul r1.x, r1.y, r1.x
    mad_sat r1.x, r1.x, c2.x, c2.y
    mov r2.xyz, c38
    mad r1.xyz, r2, r1.x, c37
    mul r1.xyz, r1, c64.x
    mul r1.xyz, r1, v2
    max r1.xyz, r1, c0.w
    add o1.xyz, r1, v2
    mul_sat o1.w, c65.x, v2.w
    add r1.x, -c16.z, c16.w
    rcp r1.x, r1.x
    mov r2.x, c0.x
    add r1.yzw, r2.x, c16.xwxy
    mul_sat r1.x, r1.x, r1.y
    add r1.x, -r1.x, -c0.x
    mad o3.zw, r1.x, r1, -c0.x
    add r1.x, -c41.x, c41.y
    rcp r1.x, r1.x
    add r1.y, -r2.x, -c41.x
    mul_sat r1.x, r1.x, r1.y
    rcp_sat r1.y, c41.x
    lrp r2.x, c41.w, r1.y, r1.x
    add o5.w, r2.x, c41.z
    mov r2.xyz, c43
    add r1.yzw, -r2.xxyz, c42.xxyz
    mad o5.xyz, r1.x, r1.yzww, c43
    mul o4.z, r0.w, v1.z
    mul r0.xyz, r0, r0.w
    mad r0.xyz, v0.xyxw, c0_abs.xxww, r0
    mov o0.xyz, r0
    mov o4.xy, r0
    mov o0.w, -c0.x
    mov o2, v3
    mov o3.xy, v4
    mov o4.w, v5.y
    mov o6, v6

// approximately 65 instruction slots used
