// Summary: simplified transparency code + improved window crossfade thanks to RaphaelK12
// Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
//
// Parameters:
//
//   sampler2D StippleTexture;
//   sampler2D TextureSampler;
//   float4 colorize;
//   float emissiveMultiplier;
//   float4 globalScalars;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   globalScalars      c39      1
//   colorize           c51      1
//   emissiveMultiplier c66      1
//   TextureSampler     s0       1
//   StippleTexture     s10      1
//

    ps_3_0
    def c219, 1.8395173895e+25, 3.9938258725e+24, 4.5435787456e+30, 2.6904930515e-43 // 192
    def c152, 0.2, 0.6, 0.8, 0.4 // c152-c153 = new stipple constants
    def c153, 0.5, 2, 1, 0
    def c127, 0.9999999, 1, 0, 0	// LogDepth constants
    def c0, 3.99600005, 4, 0.125, 0.25
    def c1, 0, -1, -0, 0
    dcl_texcoord v0.xy
    dcl_color v1
    dcl vPos.xy
    dcl_texcoord9 v9
    dcl_2d s0
    dcl_2d s10
    /* removed stipple
    mov_sat r0.x, c39.x
    mul r0.x, r0.x, c0.x
    frc r0.y, r0.x
    mul r0.z, r0.y, c0.y
    frc r0.w, r0.z
    add r1.xy, r0.zxzw, -r0.wyzw
    mul r0.xy, c0.z, vPos
    frc r0.xy, r0_abs
    cmp r0.xy, vPos, r0, -r0
    mul r0.xy, r0, c0.w
    mad r0.xy, r1, c0.w, r0
    mov r0.zw, c1.x
    texldl r0, r0, s10
    cmp r0, -r0.y, c1.y, c1.z
    texkill r0
    removed stipple */
    mul r20.xy, vPos.xy, c153.x
    frc r20.xy, r20.xy
    mad r20, r20.xxyy, -c153.y, c153.zwzw
    mul r20, r20.xxyy, r20.zwzw
    mov r21.x, c39.x
    add r21.x, r21.x, -c153.x
    cmp r21, r21.x, c152, c152.zwxy
    dp4 r20.x, r20_abs, r21
    add r20.y, -r20.x, c39.x
    texkill r20.y
    texld r0, v0, s0
    mul r0, r0, v1
    /* mul r1.xyz, r0, c66.x
    mul r1.w, r0.w, c39.x
    mul oC0, r1, c51 */
    mul r0.xyz, r0, c66.x
    mul oC0, r0, c51
	// ----------------------------------------------------------------- Linear2Log -----------------------------------------------------------------
	if_ne v9.y, c127.y
		rcp r20.z, c128.x
		min r20.w, v9.w, c128.y
		mul r20.x, r20.w, r20.z
		mul r20.y, c128.y, r20.z
		log r20.x, r20.x
		log r20.y, r20.y
		rcp r20.y, r20.y
		mad r20.z, r20.x, r20.y, -v9.x
	else
		mov r20.x, v9.z
		rcp r20.y, v9.w
		mul r20.z, r20.x, r20.y
	endif
	mov oDepth, r20.z
	// ----------------------------------------------------------------------------------------------------------------------------------------------

// approximately 21 instruction slots used (3 texture, 18 arithmetic)
