//
// Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
//
// Parameters:
//
//   float Fade_Thickness;
//   float4 gDayNightEffects;
//   row_major float4x4 gViewInverse;
//   row_major float4x4 gWorld;
//   row_major float4x4 gWorldViewProj;
//   float3 globalAnimUV0;
//   float3 globalAnimUV1;
//   float4 globalScalars;
//   float4 globalScalars2;
//
//
// Registers:
//
//   Name             Reg   Size
//   ---------------- ----- ----
//   gWorld           c0       4
//   gWorldViewProj   c8       4
//   gViewInverse     c12      4
//   globalScalars    c39      1
//   globalScalars2   c40      1
//   gDayNightEffects c45      1
//   globalAnimUV0    c208     1
//   globalAnimUV1    c209     1
//   Fade_Thickness   c210     1
//

    vs_3_0
    def c230, 1.8395173895e+25, 3.9938258725e+24, 4.5435787456e+30, 3.9026162231e-42 // 2785
    def c4, 9.99999975e-006, 1, 0, -0.00200000009
    def c5, 320, 0, 0, 0
    dcl_position v0
    dcl_texcoord v1
    dcl_normal v2
    dcl_texcoord1 v3
    dcl_texcoord2 v4
    dcl_texcoord3 v5
    dcl_texcoord4 v6
    dcl_position o0
    dcl_texcoord9 o10
    dcl_texcoord o1.xy
    dcl_texcoord1 o2
    dcl_color o3
    dcl_texcoord6 o4
    dcl_texcoord8 o5
    dcl_texcoord7 o6
    mul r0.xyz, c1, v2.y
    mad r0.xyz, v2.x, c0, r0
    mad r0.xyz, v2.z, c2, r0
    add r0.xyz, r0, c4.x
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul o2.xyz, r0, r0.w
    mad r0.xyz, v1.xyxw, c4.yyzw, c4.zzyw
    dp3 o1.x, c208, r0
    dp3 o1.y, c209, r0
    mov r0.xyz, c12
    mul r0.xyz, r0, c210.x
    dp3 r1.x, r0, c0
    dp3 r1.y, r0, c1
    dp3 r1.z, r0, c2
    mov r0.xyz, v0
    mul r2.xyz, r0.y, v4
    mad r0.xyw, r0.x, v3.xyzz, r2.xyzz
    mad r0.xyz, r0.z, v5, r0.xyww
    add r0.xyz, r0, v6
    add r1.xyz, r1, r0
    mul r1.yw, r1.y, c9.xxzw
    mad r1.xy, r1.x, c8.xwzw, r1.ywzw
    mad r1.xy, r1.z, c10.xwzw, r1
    add r1.xy, r1, c11.xwzw
    rcp r0.w, r1.y
    mul r2, r0.y, c9
    mad r2, r0.x, c8, r2
    mad r2, r0.z, c10, r2
    add r2, r2, c11
    rcp r1.y, r2.w
    mul r1.y, r2.x, r1.y
    mad r0.w, r1.x, r0.w, -r1.y
    mul_sat o6.z, r0.w, c5.x
    mul r0.w, c45.y, v4.w
    mad r0.w, v3.w, c45.x, r0.w
    mov r1.y, c4.y
    mad r0.w, r0.w, c39.z, -r1.y
    mad o3.xy, c40.z, r0.w, r1.y
    mul r1.xyz, r0.y, c1
    mad r1.xyz, r0.x, c0, r1
    mad r1.xyz, r0.z, c2, r1
    add r0.xyz, r0, v2
    add r1.xyz, r1, c3
    add r3.xyz, r1, -c15
    mov o4.xyz, r1
    dp3 r0.w, r3, r3
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r1.xy, r0.y, c9
    mad r0.xy, r0.x, c8, r1
    mad r0.xy, r0.z, c10, r0
    add r0.xy, r0, c11
    add r0.xy, r2, -r0
    mul r0.xy, r0, c4.w
    mad r0.xy, r0, r0.w, r2
    mov r0.zw, r2
    mov o6.xyw, r2
    mov o0, r0
    mov o10.zw, r0
    mov o5, r0
    mov o2.w, r0.w
    mov o3.z, v5.w
    mov o3.w, v6.w
    mov o4.w, c4.y
    mov r20.x, c8.w
    add r20.x, r20.x, c9.w
    add r20.x, r20.x, c10.w
    add o10.y, r20.x, c11.w
    
// approximately 64 instruction slots used
