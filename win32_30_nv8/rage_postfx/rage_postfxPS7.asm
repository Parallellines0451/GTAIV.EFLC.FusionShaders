// Summary: Scalable bloom
// Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
//
// Parameters:
//
//   sampler2D HDRSampler;
//   float4 TexelSize;
//   float4 globalScreenSize;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   globalScreenSize   c44      1
//   TexelSize          c66      1
//   HDRSampler         s0       1
//

    ps_3_0
    def c219, 1.8395173895e+25, 3.9938258725e+24, 4.5435787456e+30, 1.1350517561e-42 // 810
    def c0, 0.08134568504722359, 0.07631773197960531, 0.06861857776497082, 0.059126718502383165 // 4.84 sigma
    def c1, 0.04882618494284999, 0.038641056110215614, 0.029307031888653183, 0.021302008818731413
    def c2, 0.014838655087075983, 0.009905891182752114, 0.0063374981526437705, 0.0038856896664016282
    def c3, 1, 2, 3, 0
    def c4, 4, 5, 6, 0
    def c5, 7, 8, 9, 0
    def c6, 10, 11, 12, 0
    def c7, 0.0018518, 0.08309454171298661, 0, 0
    def c8, 0.2734375, 0.21875, 0.109375, 0.03125 // binomial
    def c9, 0.00390625, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_2d s0
    mul r1.xy, c44.yy, c44.zw
    mul r1.xy, r1.xy, c7.x
    
    // smaller center blur
    
    mad r2.xy, r1.xy, c3.xw, v0.xy
    texld r3.xyz, r2, s0
    mad r2.xy, r1.xy, -c3.xw, v0.xy
    texld r4.xyz, r2, s0
    mad r2.xy, r1.xy, c3.yw, v0.xy
    texld r5.xyz, r2, s0
    mad r2.xy, r1.xy, -c3.yw, v0.xy
    texld r6.xyz, r2, s0
    mad r2.xy, r1.xy, c3.zw, v0.xy
    texld r7.xyz, r2, s0
    mad r2.xy, r1.xy, -c3.zw, v0.xy
    texld r8.xyz, r2, s0
    mad r2.xy, r1.xy, c4.xw, v0.xy
    texld r9.xyz, r2, s0
    mad r2.xy, r1.xy, -c4.xw, v0.xy
    texld r2.xyz, r2, s0
    
    texld r10, v0, s0 // center sample
    
    mul r0, r10, c8.x
    mad r0, r3, c8.y, r0
    mad r0, r4, c8.y, r0
    mad r0, r5, c8.z, r0
    mad r0, r6, c8.z, r0
    mad r0, r7, c8.w, r0
    mad r0, r8, c8.w, r0
    mad r0, r9, c9.x, r0
    mad r0, r2, c9.x, r0
    
    // subtract center blur from each sample
    
    add r3.xyz, r3, -r0
    max r3.xyz, r3, c7.w
    mul r3.xyz, r3, c0.x
    
    add r4.xyz, r4, -r0
    max r4.xyz, r4, c7.w
    mad r3.xyz, r4, c0.x, r3
    
    add r4.xyz, r5, -r0
    max r4.xyz, r4, c7.w
    mad r3.xyz, r4, c0.y, r3
    
    add r4.xyz, r6, -r0
    max r4.xyz, r4, c7.w
    mad r3.xyz, r4, c0.y, r3
    
    add r4.xyz, r7, -r0
    max r4.xyz, r4, c7.w
    mad r3.xyz, r4, c0.z, r3
    
    add r4.xyz, r8, -r0
    max r4.xyz, r4, c7.w
    mad r3.xyz, r4, c0.z, r3
    
    add r4.xyz, r9, -r0
    max r4.xyz, r4, c7.w
    mad r3.xyz, r4, c0.w, r3
    
    add r4.xyz, r2, -r0
    max r4.xyz, r4, c7.w
    mad r3.xyz, r4, c0.w, r3
    
    add r4.xyz, r10, -r0
    max r4.xyz, r4, c7.w
    mad r3.xyz, r4, c7.y, r3 // also include center sample, unlike vanilla
    
    mad r2.xy, r1.xy, c4.yw, v0.xy
    texld r2.xyz, r2, s0
    add r2.xyz, r2, -r0
    max r2.xyz, r2, c7.w
    mad r3.xyz, r2, c1.x, r3
    mad r2.xy, r1.xy, -c4.yw, v0.xy
    texld r2.xyz, r2, s0
    add r2.xyz, r2, -r0
    max r2.xyz, r2, c7.w
    mad r3.xyz, r2, c1.x, r3
    mad r2.xy, r1.xy, c4.zw, v0.xy
    texld r2.xyz, r2, s0
    add r2.xyz, r2, -r0
    max r2.xyz, r2, c7.w
    mad r3.xyz, r2, c1.y, r3
    mad r2.xy, r1.xy, -c4.zw, v0.xy
    texld r2.xyz, r2, s0
    add r2.xyz, r2, -r0
    max r2.xyz, r2, c7.w
    mad r3.xyz, r2, c1.y, r3
    mad r2.xy, r1.xy, c5.xw, v0.xy
    texld r2.xyz, r2, s0
    add r2.xyz, r2, -r0
    max r2.xyz, r2, c7.w
    mad r3.xyz, r2, c1.z, r3
    mad r2.xy, r1.xy, -c5.xw, v0.xy
    texld r2.xyz, r2, s0
    add r2.xyz, r2, -r0
    max r2.xyz, r2, c7.w
    mad r3.xyz, r2, c1.z, r3
    mad r2.xy, r1.xy, c5.yw, v0.xy
    texld r2.xyz, r2, s0
    add r2.xyz, r2, -r0
    max r2.xyz, r2, c7.w
    mad r3.xyz, r2, c1.w, r3
    mad r2.xy, r1.xy, -c5.yw, v0.xy
    texld r2.xyz, r2, s0
    add r2.xyz, r2, -r0
    max r2.xyz, r2, c7.w
    mad r3.xyz, r2, c1.w, r3
    
    mad r2.xy, r1.xy, c5.zw, v0.xy
    texld r2.xyz, r2, s0
    add r2.xyz, r2, -r0
    max r2.xyz, r2, c7.w
    mad r3.xyz, r2, c2.x, r3
    mad r2.xy, r1.xy, -c5.zw, v0.xy
    texld r2.xyz, r2, s0
    add r2.xyz, r2, -r0
    max r2.xyz, r2, c7.w
    mad r3.xyz, r2, c2.x, r3
    mad r2.xy, r1.xy, c6.xw, v0.xy
    texld r2.xyz, r2, s0
    add r2.xyz, r2, -r0
    max r2.xyz, r2, c7.w
    mad r3.xyz, r2, c2.y, r3
    mad r2.xy, r1.xy, -c6.xw, v0.xy
    texld r2.xyz, r2, s0
    add r2.xyz, r2, -r0
    max r2.xyz, r2, c7.w
    mad r3.xyz, r2, c2.y, r3
    mad r2.xy, r1.xy, c6.yw, v0.xy
    texld r2.xyz, r2, s0
    add r2.xyz, r2, -r0
    max r2.xyz, r2, c7.w
    mad r3.xyz, r2, c2.z, r3
    mad r2.xy, r1.xy, -c6.yw, v0.xy
    texld r2.xyz, r2, s0
    add r2.xyz, r2, -r0
    max r2.xyz, r2, c7.w
    mad r3.xyz, r2, c2.z, r3
    mad r2.xy, r1.xy, c6.zw, v0.xy
    texld r2.xyz, r2, s0
    add r2.xyz, r2, -r0
    max r2.xyz, r2, c7.w
    mad r3.xyz, r2, c2.w, r3
    mad r2.xy, r1.xy, -c6.zw, v0.xy
    texld r2.xyz, r2, s0
    add r2.xyz, r2, -r0
    max r2.xyz, r2, c7.w
    mad r3.xyz, r2, c2.w, r3
    
    add oC0.xyz, r3, r0
    mov oC0.w, c7.w

// approximately 40 instruction slots used (7 texture, 33 arithmetic)
