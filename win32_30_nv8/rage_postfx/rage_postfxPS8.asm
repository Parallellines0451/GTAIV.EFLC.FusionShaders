// Summary: Scalable bloom
// Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
//
// Parameters:
//
//   sampler2D HDRSampler;
//   float4 TexelSize;
//   float4 globalScreenSize;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   globalScreenSize   c44      1
//   TexelSize          c66      1
//   HDRSampler         s0       1
//

    ps_3_0
    def c219, 1.8395173895e+25, 3.9938258725e+24, 4.5435787456e+30, 1.1364530546e-42 // 811
    // def c0, 0.0604166, 0.0583333, 0.05625, 0
    // def c1, 0.0541666, 0.0520833, 0.05, 0
    // def c2, 0.0479166, 0.0458333, 0.04375, 0
    def c0, 8.503183116e-2, 7.924516248e-2, 7.046251512e-2, 0
    def c1, 5.977748981e-2, 4.838506843e-2, 3.736622266e-2, 0
    def c2, 2.753221723e-2, 1.935518514e-2, 1.298217995e-2, 0
    def c3, 8.307915518e-3, 5.072600626e-3, 2.955040400e-3, 0
    def c10, 1, 2, 3, 0
    def c11, 4, 5, 6, 0
    def c12, 7, 8, 9, 0
    def c13, 10, 11, 12, 0
    def c20, 0.0004629, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_2d s0
    texld r0, v0, s0 // center
    mov r1, c66.y
    mov r2.w, v0.x
    mul r1, r1, c44.y
    mul r1, r1, c20.x
    
    mad r2.xyz, r1, c10, v0.y
    texld r3, r2.wx, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r4, r3, c0.x
    texld r3, r2.wy, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c0.y
    add r4, r4, r3
    texld r3, r2.wz, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c0.z
    add r4, r4, r3
    mad r2.xyz, r1, -c10, v0.y
    texld r3, r2.wx, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c0.x
    add r4, r4, r3
    texld r3, r2.wy, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c0.y
    add r4, r4, r3
    texld r3, r2.wz, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c0.z
    add r4, r4, r3
    
    mad r2.xyz, r1, c11, v0.y
    texld r3, r2.wx, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c1.x
    add r4, r4, r3
    texld r3, r2.wy, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c1.y
    add r4, r4, r3
    texld r3, r2.wz, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c1.z
    add r4, r4, r3
    mad r2.xyz, r1, -c11, v0.y
    texld r3, r2.wx, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c1.x
    add r4, r4, r3
    texld r3, r2.wy, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c1.y
    add r4, r4, r3
    texld r3, r2.wz, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c1.z
    add r4, r4, r3
    
    mad r2.xyz, r1, c12, v0.y
    texld r3, r2.wx, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c2.x
    add r4, r4, r3
    texld r3, r2.wy, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c2.y
    add r4, r4, r3
    texld r3, r2.wz, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c2.z
    add r4, r4, r3
    mad r2.xyz, r1, -c12, v0.y
    texld r3, r2.wx, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c2.x
    add r4, r4, r3
    texld r3, r2.wy, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c2.y
    add r4, r4, r3
    texld r3, r2.wz, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c2.z
    add r4, r4, r3
    
    mad r2.xyz, r1, c13, v0.y
    texld r3, r2.wx, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c3.x
    add r4, r4, r3
    texld r3, r2.wy, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c3.y
    add r4, r4, r3
    texld r3, r2.wz, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c3.z
    add r4, r4, r3
    mad r2.xyz, r1, -c13, v0.y
    texld r3, r2.wx, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c3.x
    add r4, r4, r3
    texld r3, r2.wy, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c3.y
    add r4, r4, r3
    texld r3, r2.wz, s0
    add r3, r3, -r0
    max r3, r3, c20.y
    mul r3, r3, c3.z
    add r4, r4, r3
    
    add oC0.xyz, r4, r0
    mov oC0.w, c10.x

// approximately 40 instruction slots used (7 texture, 33 arithmetic)
