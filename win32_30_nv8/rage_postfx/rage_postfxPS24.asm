// Summary: changes derived from PS26
// Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
//
// Parameters:
//
//   sampler2D AdapLumSampler;
//   sampler2D BloomSampler;
//   sampler2D BlurSampler;
//   float4 ColorCorrect;
//   float4 ColorShift;
//   float Exposure;
//   sampler2D GBufferTextureSampler3;
//   sampler2D HDRSampler;
//   sampler2D JitterSampler;
//   float4 NoiseParams;
//   float PLAYER_MASK;
//   sampler2D StencilCopySampler;
//   float4 TexelSize;
//   float4 ToneMapParams;
//   float4 deSatContrastGamma;
//   float4 dofBlur;
//   float4 dofDist;
//   float4 dofProj;
//   float gDirectionalMotionBlurLength;
//   float4 globalScreenSize;
//   row_major float4x4 motionBlurMatrix;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   globalScreenSize             c44      1
//   Exposure                     c66      1
//   motionBlurMatrix             c72      4
//   TexelSize                    c76      1
//   dofProj                      c77      1
//   dofDist                      c78      1
//   dofBlur                      c79      1
//   gDirectionalMotionBlurLength c80      1
//   ToneMapParams                c81      1
//   deSatContrastGamma           c82      1
//   ColorCorrect                 c83      1
//   ColorShift                   c84      1
//   NoiseParams                  c85      1
//   PLAYER_MASK                  c86      1
//   GBufferTextureSampler3       s1       1
//   HDRSampler                   s2       1
//   BlurSampler                  s3       1
//   BloomSampler                 s4       1
//   AdapLumSampler               s5       1
//   JitterSampler                s6       1
//   StencilCopySampler           s7       1
//

    ps_3_0
    def c219, 1.8395173895e+25, 3.9938258725e+24, 4.5435787456e+30, 1.1588738300e-42 // 827
    def c127, 0.9999999, 1, 0, 0	// LogDepth constants
    def c0, 58.1640015, 47.1300011, 3.20000005, 1.79999995
    def c1, 0, 0.212500006, 0.715399981, 0.0720999986
    def c2, 0.25, 1, 0.5, 0
    def c3, 0, 2, 4, 8
    def c4, -0.5, -1.5, 1.5, 0.5
    def c5, 2, -1, 0.125, 0
    def c6, 1.10000002, 0, 0, 0
	
	def c8, 0.012156862745098, 0.016078431372549, 0.0435294117647059, 0.0474509803921569 // 3.1, 4.1, 11.1, 12.1
	def c9, 0.5141176470588235, 0.5180392156862745, 0.5454901960784314, 0.5494117647058824 // 131.1, 132.1, 139.1, 140.1
	def c10, 0.027843137254902, 0.0007843137254902, 0, 0 // 7.1, 0.2
	
	def c11, 1.2, 0.0078125, 0.00390625, 0
	
	def c14, 0.0035, 0.0625, 0, 0
	def c15, 0.18993645671348536, 0.027087114076591513, -0.21261242652069953, 0.23391293246949066
	def c16, 0.04771781344140756, -0.3666840644525993, 0.297730981239584, 0.398259878229082
	def c17, -0.509063425827436, -0.06528681462854097, 0.507855152944665, -0.2875976005206389
	def c18, -0.15230616564632418, 0.6426121151781916, -0.30240170651828074, -0.5805072900736001
	def c19, 0.6978019230005561, 0.2771173334141519, -0.6990963248129052, 0.3210960724922725
	def c20, 0.3565142601623699, -0.7066415061851589, 0.266890002328106, 0.8360191043249159
	def c21, -0.7515861305520581, -0.41609876195815027, 0.9102937449894895, -0.17014527555321657
	def c22, -0.5343471434373126, 0.8058593459499529, -0.1133270115046468, -0.9490025827627441
	
    defi i0, 7, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s10
    mov r31, c2.w
    add r31.y, c222.y, c222.w // DOF || MB
	if_ne r31.y, c2.w
		texld r0, v0, s1
		// ----------------------------------------------------------------- Log2Linear -----------------------------------------------------------------
		if_ne r0.x, c127.y
			rcp r20.x, c128.x
			mul r20.x, r20.x, c128.y
			pow r20.x, r20.x, r0.x
			mul r20.x, r20.x, c128.x	// W_clip
			
			add r20.y, r20.x, -c128.x
			add r20.z, c128.y, -c128.x
			mul r20.y, r20.y, c128.y
			mul r20.z, r20.z, r20.x
			rcp r20.z, r20.z
			mul r20.w, r20.y, r20.z		// Linear depth
			
			min r0, r20.w, c127.x		// FP error hack
		endif
		// ----------------------------------------------------------------------------------------------------------------------------------------------
		add r0.y, -c77.x, c77.y
		rcp r0.y, r0.y
		mul r0.z, r0.y, c77.y
		mul r0.z, r0.z, -c77.x
		mad r0.x, c77.y, -r0.y, r0.x
		rcp r0.x, r0.x
		mul r0.y, r0.z, r0.x
	endif
	
	// samples used by DOF and stipple filter
    mov r3, c4
    mad r4, c76.xyxy, r3.xyzx, v0.xyxy
    mad r6, c76.xyxy, r3.wzyw, v0.xyxy
    texld r7.xyz, v0, s2
    texld r3.xyz, r4.xy, s2
    texld r4.xyz, r4.zw, s2
    texld r5.xyz, r6.xy, s2
    texld r6.xyz, r6.zw, s2
	
	// depth of field
	if_ne r31.x, c222.y
		mad r0.x, r0.z, r0.x, -c78.w
		mad r0.x, c78.y, -r3.w, r0.x
		max r1.w, r0.x, c1.x
		rcp r0.z, c78.z
		mul r0.z, r1.w, r0.z
		lrp r1.w, r0.z, c79.z, c79.y
		min r0.z, c79.z, r1.w
		mul r1.w, r0.z, r0.z
		
		mov r20, c76.xyxy
		mul r20, r20, c44.y
		mul r20, r20, c14.x
		
		mad r22, r20, c15, v0.xyxy
		texldl r21.xyz, r22.xy, s2
		texldl r23.xyz, r22.zw, s2
		add r21.xyz, r21, r23
		
		mad r22, r20, c16, v0.xyxy
		texldl r23.xyz, r22.xy, s2
		add r21.xyz, r21, r23
		texldl r23.xyz, r22.zw, s2
		add r21.xyz, r21, r23
		
		mad r22, r20, c17, v0.xyxy
		texldl r23.xyz, r22.xy, s2
		add r21.xyz, r21, r23
		texldl r23.xyz, r22.zw, s2
		add r21.xyz, r21, r23
		
		mad r22, r20, c18, v0.xyxy
		texldl r23.xyz, r22.xy, s2
		add r21.xyz, r21, r23
		texldl r23.xyz, r22.zw, s2
		add r21.xyz, r21, r23
		
		mad r22, r20, c19, v0.xyxy
		texldl r23.xyz, r22.xy, s2
		add r21.xyz, r21, r23
		texldl r23.xyz, r22.zw, s2
		add r21.xyz, r21, r23
		
		mad r22, r20, c20, v0.xyxy
		texldl r23.xyz, r22.xy, s2
		add r21.xyz, r21, r23
		texldl r23.xyz, r22.zw, s2
		add r21.xyz, r21, r23
		
		mad r22, r20, c21, v0.xyxy
		texldl r23.xyz, r22.xy, s2
		add r21.xyz, r21, r23
		texldl r23.xyz, r22.zw, s2
		add r21.xyz, r21, r23
		
		mad r22, r20, c22, v0.xyxy
		texldl r23.xyz, r22.xy, s2
		add r21.xyz, r21, r23
		texldl r23.xyz, r22.zw, s2
		add r21.xyz, r21, r23
		
		mul r24.xyz, r21, c14.y
	else
		mov r1.w, c2.w
		
		add r24.xyz, r3, r4
		add r24.xyz, r24, r5
		add r24.xyz, r24, r6
		mul r24.xyz, r24, c2.x
	endif
	
	// stipple filter
    dp3 r0.x, r7, c1.yzww
    dp3 r8.x, r3, c1.yzww
    dp3 r8.y, r4, c1.yzww
    dp3 r8.z, r5, c1.yzww
    dp3 r8.w, r6, c1.yzww
    dp4 r0.z, r8, c2.x
    add r8, r8, -r0.z
    dp4 r2.w, r8, r8
    add r0.x, r0.x, -r0.z
    mad r0.x, r0.x, r0.x, -r2.w
	if_ne r31.x, c223.z // Stipple mask
		mov r21, c76
		
		texld r22, v0, s7
		add r23, r22.x, -c8
		add_sat r20, -r23_abs, c10.y
		add r23, r22.x, -c9
		add_sat r23, -r23_abs, c10.y
		add r20, r20, r23
		add r23.x, r22.x, -c10.x
		add_sat r23.x, -r23_abs, c10.y
		add r20.x, r20, r23
		
		mad r21, r21.xyxy, c2.yyww, v0.xyxy
		
		texldl r22, r21.xw, s7
		add r23, r22.x, -c8
		add_sat r23, -r23_abs, c10.y
		add r20, r20, r23
		add r23, r22.x, -c9
		add_sat r23, -r23_abs, c10.y
		add r20, r20, r23
		add r23.x, r22.x, -c10.x
		add_sat r23.x, -r23_abs, c10.y
		add r20.x, r20, r23
		
		texldl r22, r21.zy, s7
		add r23, r22.x, -c8
		add_sat r23, -r23_abs, c10.y
		add r20, r20, r23
		add r23, r22.x, -c9
		add_sat r23, -r23_abs, c10.y
		add r20, r20, r23
		add r23.x, r22.x, -c10.x
		add_sat r23.x, -r23_abs, c10.y
		add r20.x, r20, r23
		
		texldl r22, r21.xy, s7
		add r23, r22.x, -c8
		add_sat r23, -r23_abs, c10.y
		add r20, r20, r23
		add r23, r22.x, -c9
		add_sat r23, -r23_abs, c10.y
		add r20, r20, r23
		add r23.x, r22.x, -c10.x
		add_sat r23.x, -r23_abs, c10.y
		add r20.x, r20, r23
		
		dp4 r20.x, r20, c2.y
		cmp r0.x, -r20_abs.x, -c2.y, r0.x
	endif
    cmp r0.x, r0.x, c2.y, r1.w
	
	// depth of field and stipple filter average
	lrp r3.xyz, r0.x, r24, r7
	
	// motion blur
	if_ne r31.x, c222.w
		mad r4.xyz, v0.yxyw, c5.x, c5.y
		mul r0.z, r4.y, c77.z
		mul r0.z, r0.y, r0.z
		mul r1.w, -r4.x, c77.w
		mul r1.w, r0.y, r1.w
		mul r5.xyz, r1.w, c73
		mad r5.xyz, r0.z, c72, r5
		mad r5.xyz, -r0.y, c74, r5
		add r5.xyz, r5, c75
		mul r0.y, -r5.z, c77.z
		rcp r0.y, r0.y
		mul r6.x, r5.x, r0.y
		mul r0.y, r5.z, c77.w
		rcp r0.y, r0.y
		mul r6.y, r5.y, r0.y
		add r0.yz, -r4, r6.xxyw
		mov r20.x, c221.z
		mul_sat r20.x, r20.x, c80.x
		mul r0.yz, r0, r20.x // fix motion blur at high fps
		mul r4.xy, r0.yzzw, c5.z
		texld r5, v0, s7
		add r1.w, r5.x, -c86.x
		mul r4.zw, c0.xyxy, v0.xyxy
		mad r4.zw, r3.xyxy, c3.w, r4
		texldl r5, r4.zwzw, s6
		add r2.w, r5.x, c4.x
		mad r4.zw, r4.xyxy, r2.w, v0.xyxy
		mov r5.xyz, r3
		mov r2.w, c2.y
		mov r3.w, c2.y
		rep i0
			mad r6.xy, r4, r3.w, r4.zwzw
			texldl r7, r6, s7
			add r5.w, r7.x, -c86.x
			cmp r5.w, r5.w, c2.w, c2.y
			texldl r6, r6, s2
			mad r5.xyz, r6, r5.w, r5
			add r2.w, r2.w, r5.w
			add r3.w, r3.w, c2.y
		endrep
		rcp r2.w, r2.w
		mul r0.yz, r0, c44.xxyw
		dp2add r0.y, r0.yzzw, r0.yzzw, c1.x
		rsq r0.y, r0.y
		rcp r0.y, r0.y
		mul r0.y, r0.y, c4.w
		add r0.x, r0.x, c2.y
		rcp r0.x, r0.x
		mul_sat r0.x, r0.y, r0.x
		mad r4.xyz, r5, r2.w, -r3
		mad r0.xyz, r0.x, r4, r3
		cmp r3.xyz, r1.w, r3, r0
	endif
	
	// TLAD noise
    mov r1.zw, c0
    mad r1.xy, v0, r1.zwzw, c85
    frc r1.xy, r1
    mul r1.xy, r1.xy, c221.x // fix noise tiling being affected by water quality
    mul r1.x, r1.x, c44.x
    mul r1.x, r1.x, c44.w // fix noise aspect ratio
    texld r1, r1, s3
    add r0.w, r1.z, c4.x
    mul r0.w, r0.w, c85.z
    mad r3.xyz, r0.w, c6.x, r3
	
	// tonemap and color correction
    texld r1, c1.x, s5
    rcp r0.w, r1.x
    mul r0.w, r0.w, c81.y
	
	// bloom
    rcp r1.x, r0.w
    mul r1.x, r1.x, c81.x
    texld r2, v0, s4
    mad r1.xyz, r2, c66.x, -r1.x
    mul r2.xyz, r1, c81.z
    mul r2.xyz, r2, c2.x
    cmp r1.xyz, r1, r2, c1.x
    mad r0.xyz, r3, c66.x, r1
	
	// tonemap and color correction
    mul r1.xyz, r0.w, r0
    dp3 r1.x, r1, c1.yzww
    mad r0.xyz, r0, r0.w, -r1.x
    mad r0.xyz, c82.x, r0, r1.x
    mul r0.w, r1.x, c84.w
    mul r1.yzw, r0.w, c84.xxyz
    mov_sat r2.x, r0.w
    mad r0.xyz, c84, -r0.w, r0
    mad r0.xyz, r2.x, r0, r1.yzww
    mul r0.xyz, r0, c83
    add r0.xyz, r0, r0
    mov_sat r1.x, r1.x
    mov r8.y, c2.y
    add r0.w, -r8.y, c82.z
    pow r2.x, r1.x, r0.w
    mul_sat r0.xyz, r0, r2.x
	
	// PS3-like gamma
	if_ne r31.x, c222.z
		pow r0.x, r0.x, c11.x
		pow r0.y, r0.y, c11.x
		pow r0.z, r0.z, c11.x
	endif
	
	// blue noise deband
	mul r1.xy, v0.xy, c44.xy
	mul r1.xy, r1.xy, c11.z
	texld r1, r1, s10
	add r1.z, r1.z, c4.x
	mad_sat oC0.xyz, r1.z, c11.y, r0
    mov oC0.w, c2.y

// approximately 176 instruction slots used (14 texture, 162 arithmetic)
