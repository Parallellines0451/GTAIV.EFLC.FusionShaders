// Summary: improved light volume transparency
// Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
//
// Parameters:
//
//   sampler2D GBufferTextureSampler3;
//   float gDeferredLightRadius;
//   sampler2D gDeferredLightSampler2;
//   float4 gDeferredProjParams;
//   float4 gooDeferredLightScreenSize;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   gDeferredLightRadius       c66      1
//   gooDeferredLightScreenSize c72      1
//   gDeferredProjParams        c73      1
//   gDeferredLightSampler2     s0       1
//   GBufferTextureSampler3     s1       1
//

    ps_3_0
    def c219, 1.8395173895e+25, 3.9938258725e+24, 4.5435787456e+30, 3.2229864679e-44 // 23
    def c0, 0.50999999, 9.99999975e-006, 16, 1
    def c1, 0, 0, 0, 0
    def c2, 0.5, 0.125, 3.14159274, 1.5
    def c3, 0.85, 0.0416666, -2, 3
    dcl_texcoord v0
    dcl_texcoord1 v1.xyz
    dcl_texcoord2 v2.xyz
    dcl vPos.xy
    dcl_texcoord9 v9
    dcl_2d s0
    dcl_2d s1
    add r0.xy, c0.x, vPos
    mul r0.xy, r0, c72.zwzw
    texld r0, r0, s1
    
    // LogDepth Read
    pow r19.x, c209_abs.z, r0.x
    mul r0.y, r19.x, c209.w
    
    rcp r0.x, v0.w
    mul_sat r0.x, r0.x, r0.y
    mov r1.xyz, v0
    mad r0.xyz, v1, r0.x, r1
    mul r2.xyz, r1, v1.zxyw
    mad r1.xyz, r1.zxyw, v1, -r2
    mul r2.xyz, r1, v1.zxyw
    mad r1.xyz, v1.yzxw, r1.yzxw, -r2
    add r1.xyz, r1, c0.y
    nrm r2.xyz, r1
    dp3 r0.w, r2, v0
    
    if_eq -c210_abs.y, c210_abs.y
      mul r0.w, r0.w, r0.w
      mul r1.x, c66.x, c66.x
      rcp r1.x, r1.x
      mul r1.x, r1.x, c0.z
      min r2.x, r1.x, c0.z
      mad r0.w, r0.w, r2.x, c0.w
      rsq r0.w, r0.w
      rsq r1.x, r2.x
      rcp r1.x, r1.x
      mul r1.x, r0.w, r1.x
      rcp r0.w, r0.w
      mul r0.xyz, r0, r1.x
      mul r1.xyz, r1.x, v0
      dp3 r1.w, r0, r0
      dp3 r0.x, r0, r1
      dp3 r0.y, r1, r1
      add r0.y, r0.y, c0.y
      rsq r0.y, r0.y
      add r0.z, r1.w, c0.y
      rsq r0.z, r0.z
      mul r0.y, r0.y, r0.z
      mul r0.x, r0.x, r0.y
      mad r1.y, r0.x, c2.x, c2.x
      mov r1.x, c2.y
      mov r1.zw, c1.x
      texldl r1, r1, s0
      mul r0.x, r2.x, r1.x
      mul r0.y, r2.x, c2.w
      mul r0.y, r0.w, r0.y
      rcp r0.y, r0.y
      mul r0.x, r0.x, c2.z
      mul r0.x, r0.y, r0.x
    else
      // https://www.desmos.com/calculator/t7q9gm2qaa
      mov r20.x, c66.x
      max r20.y, r20.x, c0.w
      mul r20.y, r20.y, r20.y
      mul r20.xy, r20.xy, c3.xy
      add r20.z, r20.x, -r0.w
      rcp r20.x, r20.x
      mul_sat r20.x, r20.x, r20.z
      mad r20.z, r20.x, c3.z, c3.w
      mul r20.z, r20.z, r20.x
      mul r20.x, r20.z, r20.x
      mul r20.x, r20.x, r20.y
    
      mul r1.x, c66.x, c66.x
      rcp r1.x, r1.x
      mul r1.x, r1.x, c0.z
      min r2.x, r1.x, c0.z
      dp3 r1.w, r0, r0
      dp3 r0.x, r0, v0
      dp3 r0.y, v0, v0
      add r0.y, r0.y, c0.y
      rsq r0.y, r0.y
      add r0.z, r1.w, c0.y
      rsq r0.z, r0.z
      mul r0.y, r0.y, r0.z
      mul r0.x, r0.x, r0.y
      mad r1.y, r0.x, c2.x, c2.x
      mov r1.x, c2.y
      mov r1.zw, c1.x
      texldl r1, r1, s0
      mul r0.x, r2.x, r1.x
      mul r0.x, r0.x, c2.z
      mul r0.x, r20.x, r0.x
    endif
    
    mul oC0.xyz, r0.x, v2
    mov oC0.w, c1.x
    
    // LogDepth Write
    mul r19.x, v9.w, c209.x
    log r19.x, r19.x
    mul r19.x, r19.x, c209.y
    rcp r19.y, v9.w
    mul r19.y, r19.y, v9.z
    cmp oDepth, -v9_abs.y, r19.y, r19.x

// approximately 51 instruction slots used (2 texture, 49 arithmetic)
