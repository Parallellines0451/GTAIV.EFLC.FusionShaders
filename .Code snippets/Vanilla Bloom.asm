// Rewritten vanilla bloom for reference
// Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
//
// Parameters:
//
//   sampler2D HDRSampler;
//   float4 TexelSize;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   TexelSize    c66      1
//   HDRSampler   s0       1
//

    ps_3_0
    def c0, 1, 0, 0, 0					// n,0 for horizontal & 0,n for vertical
	// Weights
	def c1, 0.7, 0.8, 0.9, 0.1724137931034483
	
    dcl_texcoord v0.xy
    dcl_2d s0
	
	mov r0, c0.w						// starting sum
	mov r1.xy, c0.xy					// offset
	
	texld r2, v0, s0					// center point
	
	// 1
	
		mad r3.xy, c66, -r1.xy, v0
		texld r3, r3, s0
		add r3, r3, -r2 				// subtract by center
		cmp r3, r3, r3, c0.w			// clamp negatives to 0
		mul r3, r3, c1.z				// multiply by weight
		add r0, r0, r3					// sum
		
		mad r3.xy, c66, r1.xy, v0
		texld r3, r3, s0
		add r3, r3, -r2 				// subtract by center
		cmp r3, r3, r3, c0.w			// clamp negatives to 0
		mul r3, r3, c1.z				// multiply by weight
		add r0, r0, r3					// sum
		
	add r1.xy, r1.xy, c0.xy				// offset++
	
	// 2
	
		mad r3.xy, c66, -r1.xy, v0
		texld r3, r3, s0
		add r3, r3, -r2 				// subtract by center
		cmp r3, r3, r3, c0.w			// clamp negatives to 0
		mul r3, r3, c1.y				// multiply by weight
		add r0, r0, r3					// sum
		
		mad r3.xy, c66, r1.xy, v0
		texld r3, r3, s0
		add r3, r3, -r2 				// subtract by center
		cmp r3, r3, r3, c0.w			// clamp negatives to 0
		mul r3, r3, c1.y				// multiply by weight
		add r0, r0, r3					// sum
	
	add r1.xy, r1.xy, c0.xy				// offset++
	
	// 3
	
		mad r3.xy, c66, -r1.xy, v0
		texld r3, r3, s0
		add r3, r3, -r2 				// subtract by center
		cmp r3, r3, r3, c0.w			// clamp negatives to 0
		mul r3, r3, c1.x				// multiply by weight
		add r0, r0, r3					// sum
		
		mad r3.xy, c66, r1.xy, v0
		texld r3, r3, s0
		add r3, r3, -r2 				// subtract by center
		cmp r3, r3, r3, c0.w			// clamp negatives to 0
		mul r3, r3, c1.x				// multiply by weight
		add r0, r0, r3					// sum

    mad oC0.xyz, r0, c1.w, r2			// offset samples + center
    mov oC0.w, c0.x

// approximately 40 instruction slots used (7 texture, 33 arithmetic)
 